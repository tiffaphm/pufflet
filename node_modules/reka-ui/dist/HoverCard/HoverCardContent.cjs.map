{"version":3,"file":"HoverCardContent.cjs","sources":["../../src/HoverCard/HoverCardContent.vue"],"sourcesContent":["<script lang=\"ts\">\nimport type { HoverCardContentImplEmits, HoverCardContentImplProps } from './HoverCardContentImpl.vue'\n\nexport type HoverCardContentEmits = HoverCardContentImplEmits\n\nexport interface HoverCardContentProps extends HoverCardContentImplProps {\n  /**\n   * Used to force mounting when more control is needed. Useful when\n   * controlling animation with Vue animation libraries.\n   */\n  forceMount?: boolean\n}\n</script>\n\n<script setup lang=\"ts\">\nimport { injectHoverCardRootContext } from './HoverCardRoot.vue'\nimport { excludeTouch } from './utils'\nimport { Presence } from '@/Presence'\nimport HoverCardContentImpl from './HoverCardContentImpl.vue'\nimport { useForwardExpose, useForwardPropsEmits } from '@/shared'\n\nconst props = defineProps<HoverCardContentProps>()\nconst emits = defineEmits<HoverCardContentEmits>()\nconst forwarded = useForwardPropsEmits(props, emits)\nconst { forwardRef } = useForwardExpose()\n\nconst rootContext = injectHoverCardRootContext()\n</script>\n\n<template>\n  <Presence\n    :present=\"forceMount || rootContext.open.value\"\n  >\n    <HoverCardContentImpl\n      v-bind=\"forwarded\"\n      :ref=\"forwardRef\"\n      @pointerenter=\"excludeTouch(rootContext.onOpen)($event)\"\n    >\n      <slot />\n    </HoverCardContentImpl>\n  </Presence>\n</template>\n"],"names":["useForwardPropsEmits","useForwardExpose","injectHoverCardRootContext"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqBA,IAAA,MAAM,KAAQ,GAAA,OAAA;AACd,IAAA,MAAM,KAAQ,GAAA,MAAA;AACd,IAAM,MAAA,SAAA,GAAYA,gDAAqB,CAAA,KAAA,EAAO,KAAK,CAAA;AACnD,IAAM,MAAA,EAAE,UAAW,EAAA,GAAIC,wCAAiB,EAAA;AAExC,IAAA,MAAM,cAAcC,kDAA2B,EAAA;;;;;;;;;;;;;;;;;;;;;;;;"}