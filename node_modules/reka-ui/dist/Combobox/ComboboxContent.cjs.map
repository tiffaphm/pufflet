{"version":3,"file":"ComboboxContent.cjs","sources":["../../src/Combobox/ComboboxContent.vue"],"sourcesContent":["<script lang=\"ts\">\nimport type { ComboboxContentImplEmits, ComboboxContentImplProps } from './ComboboxContentImpl.vue'\n\nexport type ComboboxContentEmits = ComboboxContentImplEmits\nexport interface ComboboxContentProps extends ComboboxContentImplProps {\n  /**\n   * Used to force mounting when more control is needed. Useful when\n   * controlling animation with Vue animation libraries.\n   */\n  forceMount?: boolean\n}\n</script>\n\n<script setup lang=\"ts\">\nimport { injectComboboxRootContext } from './ComboboxRoot.vue'\nimport ComboboxContentImpl from './ComboboxContentImpl.vue'\nimport { Presence } from '@/Presence'\nimport { useForwardExpose, useForwardPropsEmits, useId } from '@/shared'\n\nconst props = defineProps<ComboboxContentProps>()\nconst emits = defineEmits<ComboboxContentEmits>()\nconst forwarded = useForwardPropsEmits(props, emits)\nconst { forwardRef } = useForwardExpose()\n\nconst rootContext = injectComboboxRootContext()\n\nrootContext.contentId ||= useId(undefined, 'reka-combobox-content')\n</script>\n\n<template>\n  <Presence :present=\"forceMount || rootContext.open.value\">\n    <ComboboxContentImpl\n      v-bind=\"{ ...forwarded, ...$attrs }\"\n      :ref=\"forwardRef\"\n    >\n      <slot />\n    </ComboboxContentImpl>\n  </Presence>\n</template>\n"],"names":["useForwardPropsEmits","useForwardExpose","injectComboboxRootContext","useId"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmBA,IAAA,MAAM,KAAQ,GAAA,OAAA;AACd,IAAA,MAAM,KAAQ,GAAA,MAAA;AACd,IAAM,MAAA,SAAA,GAAYA,gDAAqB,CAAA,KAAA,EAAO,KAAK,CAAA;AACnD,IAAM,MAAA,EAAE,UAAW,EAAA,GAAIC,wCAAiB,EAAA;AAExC,IAAA,MAAM,cAAcC,+CAA0B,EAAA;AAE9C,IAAY,WAAA,CAAA,SAAA,KAAcC,kBAAM,CAAA,SAAA,EAAW,uBAAuB,CAAA;;;;;;;;;;;;;;;;;;;;;"}