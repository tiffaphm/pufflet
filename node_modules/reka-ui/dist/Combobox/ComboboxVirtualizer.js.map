{"version":3,"file":"ComboboxVirtualizer.js","sources":["../../src/Combobox/ComboboxVirtualizer.vue"],"sourcesContent":["<script lang=\"ts\">\nexport interface ComboboxVirtualizerProps<T extends AcceptableValue = AcceptableValue> extends ListboxVirtualizerProps<T> {}\n</script>\n\n<script setup lang=\"ts\" generic=\"T extends AcceptableValue = AcceptableValue\">\nimport ListboxVirtualizer, { type ListboxVirtualizerProps } from '@/Listbox/ListboxVirtualizer.vue'\nimport type { AcceptableValue } from '@/shared/types'\nimport { injectComboboxRootContext } from './ComboboxRoot.vue'\nimport type { VirtualItem, Virtualizer } from '@tanstack/vue-virtual'\n\nconst props = defineProps<ComboboxVirtualizerProps<T>>()\n\ndefineSlots<{\n  default: (props: {\n    option: T\n    virtualizer: Virtualizer<HTMLElement, Element>\n    virtualItem: VirtualItem\n  }) => any\n}>()\n\nconst rootContext = injectComboboxRootContext()\n// set virtual true when this component mounted\nrootContext.isVirtual.value = true\n</script>\n\n<template>\n  <ListboxVirtualizer\n    v-slot=\"slotProps\"\n    v-bind=\"props\"\n  >\n    <slot v-bind=\"slotProps\" />\n  </ListboxVirtualizer>\n</template>\n"],"names":[],"mappings":";;;;;;;;;;;;;AAUA,IAAA,MAAM,KAAQ,GAAA,OAAA;AAUd,IAAA,MAAM,cAAc,yBAA0B,EAAA;AAE9C,IAAA,WAAA,CAAY,UAAU,KAAQ,GAAA,IAAA;;;;;;;;;;;;;;"}