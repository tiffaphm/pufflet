{"version":3,"file":"PopperRoot.cjs","sources":["../../src/Popper/PopperRoot.vue"],"sourcesContent":["<script lang=\"ts\">\nimport type { Ref } from 'vue'\nimport { createContext } from '@/shared'\nimport type { ReferenceElement } from '@floating-ui/vue'\n\nexport interface Measurable {\n  getBoundingClientRect: () => DOMRect\n}\n\ninterface PopperRootContext {\n  anchor: Ref<ReferenceElement | undefined >\n  onAnchorChange: (element: ReferenceElement | undefined) => void\n}\n\nexport const [injectPopperRootContext, providePopperRootContext]\n  = createContext<PopperRootContext>('PopperRoot')\n</script>\n\n<script setup lang=\"ts\">\nimport { ref } from 'vue'\n\ndefineOptions({\n  inheritAttrs: false,\n})\n\nconst anchor = ref<ReferenceElement>()\n\nprovidePopperRootContext({\n  anchor,\n  onAnchorChange: element => anchor.value = element,\n})\n</script>\n\n<template>\n  <slot />\n</template>\n"],"names":["createContext","ref"],"mappings":";;;;;AAcO,MAAM,CAAC,uBAAA,EAAyB,wBAAwB,CAAA,GAC3DA,mCAAiC,YAAY;;;;;;;AAUjD,IAAA,MAAM,SAASC,OAAsB,EAAA;AAErC,IAAyB,wBAAA,CAAA;AAAA,MACvB,MAAA;AAAA,MACA,cAAA,EAAgB,CAAW,OAAA,KAAA,MAAA,CAAO,KAAQ,GAAA;AAAA,KAC3C,CAAA;;;;;;;;;;"}