{"version":3,"file":"TooltipContentHoverable.cjs","sources":["../../src/Tooltip/TooltipContentHoverable.vue"],"sourcesContent":["<script setup lang=\"ts\">\nimport TooltipContentImpl, { type TooltipContentImplProps } from './TooltipContentImpl.vue'\nimport { injectTooltipRootContext } from './TooltipRoot.vue'\nimport { injectTooltipProviderContext } from './TooltipProvider.vue'\nimport { useForwardExpose, useForwardProps, useGraceArea } from '@/shared'\n\nconst props = defineProps<TooltipContentImplProps>()\nconst forwardedProps = useForwardProps(props)\nconst { forwardRef, currentElement } = useForwardExpose()\n\nconst { trigger, onClose } = injectTooltipRootContext()\nconst providerContext = injectTooltipProviderContext()\n\nconst { isPointerInTransit, onPointerExit } = useGraceArea(trigger, currentElement)\n\nproviderContext.isPointerInTransitRef = isPointerInTransit\nonPointerExit(() => {\n  onClose()\n})\n</script>\n\n<template>\n  <TooltipContentImpl\n    :ref=\"forwardRef\"\n    v-bind=\"forwardedProps\"\n  >\n    <slot />\n  </TooltipContentImpl>\n</template>\n"],"names":["useForwardProps","useForwardExpose","injectTooltipRootContext","injectTooltipProviderContext","useGraceArea"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAMA,IAAA,MAAM,KAAQ,GAAA,OAAA;AACd,IAAM,MAAA,cAAA,GAAiBA,uCAAgB,KAAK,CAAA;AAC5C,IAAA,MAAM,EAAE,UAAA,EAAY,cAAe,EAAA,GAAIC,wCAAiB,EAAA;AAExD,IAAA,MAAM,EAAE,OAAA,EAAS,OAAQ,EAAA,GAAIC,4CAAyB,EAAA;AACtD,IAAA,MAAM,kBAAkBC,oDAA6B,EAAA;AAErD,IAAA,MAAM,EAAE,kBAAoB,EAAA,aAAA,EAAkB,GAAAC,gCAAA,CAAa,SAAS,cAAc,CAAA;AAElF,IAAA,eAAA,CAAgB,qBAAwB,GAAA,kBAAA;AACxC,IAAA,aAAA,CAAc,MAAM;AAClB,MAAQ,OAAA,EAAA;AAAA,KACT,CAAA;;;;;;;;;;;;;;"}